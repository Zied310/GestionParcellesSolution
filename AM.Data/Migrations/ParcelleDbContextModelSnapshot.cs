// <auto-generated />
using System;
using AM.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AM.Data.Migrations
{
    [DbContext(typeof(ParcelleDbContext))]
    partial class ParcelleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AM.Core.Domaine.Agriculteur", b =>
                {
                    b.Property<string>("CIN")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrenomNom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("CIN");

                    b.ToTable("Agriculteurs");
                });

            modelBuilder.Entity("AM.Core.Domaine.Agriculture", b =>
                {
                    b.Property<string>("ParcelleRef")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("AgriculteurCIN")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DatePlantation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRecolte")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<double>("PrixLocationParcelle")
                        .HasColumnType("float");

                    b.HasKey("ParcelleRef", "AgriculteurCIN");

                    b.HasIndex("AgriculteurCIN");

                    b.ToTable("Agricultures");
                });

            modelBuilder.Entity("AM.Core.Domaine.Cooperative", b =>
                {
                    b.Property<string>("Reference")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Reference");

                    b.ToTable("Cooperatives");
                });

            modelBuilder.Entity("AM.Core.Domaine.Parcelle", b =>
                {
                    b.Property<string>("Reference")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CooperativeReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Localisation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sol")
                        .HasColumnType("int");

                    b.Property<double>("Superficie")
                        .HasColumnType("float");

                    b.HasKey("Reference");

                    b.HasIndex("CooperativeReference");

                    b.ToTable("Parcelles");
                });

            modelBuilder.Entity("AM.Core.Domaine.Agriculture", b =>
                {
                    b.HasOne("AM.Core.Domaine.Agriculteur", "Agriculteur")
                        .WithMany("Agricultures")
                        .HasForeignKey("AgriculteurCIN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AM.Core.Domaine.Parcelle", "Parcelle")
                        .WithMany("Agricultures")
                        .HasForeignKey("ParcelleRef")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agriculteur");

                    b.Navigation("Parcelle");
                });

            modelBuilder.Entity("AM.Core.Domaine.Parcelle", b =>
                {
                    b.HasOne("AM.Core.Domaine.Cooperative", "Cooperative")
                        .WithMany("Parcelles")
                        .HasForeignKey("CooperativeReference")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cooperative");
                });

            modelBuilder.Entity("AM.Core.Domaine.Agriculteur", b =>
                {
                    b.Navigation("Agricultures");
                });

            modelBuilder.Entity("AM.Core.Domaine.Cooperative", b =>
                {
                    b.Navigation("Parcelles");
                });

            modelBuilder.Entity("AM.Core.Domaine.Parcelle", b =>
                {
                    b.Navigation("Agricultures");
                });
#pragma warning restore 612, 618
        }
    }
}
